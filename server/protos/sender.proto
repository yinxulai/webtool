syntax = "proto3";

package standard;


// 状态
enum State {
  UNKNOWN         = 0 ; // 未知
  SUCCESS         = 1 ; // 成功
  FAILURE         = 2 ; // 失败
  NOT_EXIST       = 3 ; // 不存在
  UNDEFINED       = 4 ; // 未定义
  PROHIBITED      = 5 ; // 被禁止
  NO_SERVICE_AVAILABLE = 6 ; // 无可用服务
  DB_OPERATION_FATLURE = 7 ; // 数据库操作失败
}

message VerifyCode {
  string Key = 1 ; // key
  string Code = 2 ; // code
  string Operation = 3 ; // 创建时间
  string ExpireTime = 4 ; // 过期时间
  string DeletedTime = 5 ; // 删除时间
  string CreatedTime = 6 ; // 创建时间
  string UpdatedTime = 7 ; // 更新时间
}

// Key 的设计是为了
// 每次发送完成、会得到一个 Key
// 在验证时要通过 Key + 用户收到的 Code 来做验证
// 同一个用户可能发送过多次相同操作的验证码、甚至可能出现验证码也相同

message CheckVerifyCodeRequest{
  string Key    = 1 ;  // 唯一标识符
  string VerifyCode  = 2 ;  // 验证码
}

message CheckVerifyCodeeResponse {
  State State    = 1 ;
  string Message = 2 ;
}

message DestroyVerifyCodeByKeyRequest{
  string Key  = 1 ;  // 唯一标识符
}

message DestroyVerifyCodeByKeyResponse {
  State State    = 1 ;
  string Message = 2 ;
}

message SendVerifyCodeByEmailRequest {
  string Operation      = 1 ; // 操作
  string EmailAddress   = 2 ; // 邮件地址
  int64 ValidityPeriod  = 3 ; // 有效期 单位 s
}

//发送成功失败状态
message SendVerifyCodeByEmailResponse {
  State State    = 1 ;
  string Message = 2 ;
  string Key  = 3 ;  // 唯一标识符
}

message SendVerifyCodeBySmsRequest {
  string Operation   = 1 ; // 操作
  string PhoneNumber = 2 ; // 手机号码
  string CountryCode = 3 ; // 国家代码
  int64 ValidityPeriod  = 4 ; // 有效期 单位s
}

//发送成功失败状态
message SendVerifyCodeBySmsResponse {
  State State      = 1 ;
  string Message   = 2 ;
  string Key  = 3 ;  // 唯一标识符
}

message SendVerifyCodeByCallPhoneRequest {
  string Operation      = 1 ; // 操作
  string PhoneNumber    = 2 ; // 手机号码
  string CountryCode    = 3 ; // 国家代码
  int64 ValidityPeriod  = 4 ; // 有效期 单位s
}

//发送成功失败状态
message SendVerifyCodeByCallPhoneResponse {
  State State      = 1 ;
  string Message   = 2 ;
  string Key  = 3 ;  // 唯一标识符
}

service Sender {
  rpc CheckVerifyCode(CheckVerifyCodeRequest) returns (CheckVerifyCodeeResponse){}      // 校验验证码
  rpc SendVerifyCodeBySms(SendVerifyCodeBySmsRequest) returns (SendVerifyCodeBySmsResponse){}     // 通过短信发送验证码
  rpc DestroyVerifyCodeByKey(DestroyVerifyCodeByKeyRequest) returns (DestroyVerifyCodeByKeyResponse){}     // 立即销毁一条验证码
  rpc SendVerifyCodeByEmail(SendVerifyCodeByEmailRequest) returns (SendVerifyCodeByEmailResponse){}     // 通过邮件发送验证码
  rpc SendVerifyCodeByCallPhone(SendVerifyCodeByCallPhoneRequest) returns (SendVerifyCodeByCallPhoneResponse){}     // 通过电话发送验证码
}
